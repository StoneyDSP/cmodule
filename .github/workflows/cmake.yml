name: CMake

on:
  push:
    branches: [ "main", "development" ]
  pull_request:
    branches: [ "main", "development" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  CMAKE_CONFIGURATION_TYPES: Debug;Release;RelWithDebInfo;MinSizeRel
  BUILD_TYPE: Debug
  VCPKG_BINARY_SOURCES: 'clear;nuget,GitHub,readwrite'

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix    
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        build: [Debug, Release]
        nodev: [ latest, lts/* ]
    runs-on: ${{ matrix.os }}
    
    steps:
    - name: CMake Setup
      uses: jwlawson/actions-setup-cmake@v1.13
      with:
        cmake-version: 'latest'
      
    - name: Node Setup
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.nodev }}
    
    - name: Checkout Project
      uses: actions/checkout@v3
        
    - run: npm install -g npm@latest
    - run: npm install -g yarn@latest
    - run: yarn add cmake-js@latest

    - name: CMake Configure
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      working-directory: ${{github.workspace}}
      run: cmake -B build -DCMAKE_BUILD_TYPE=${{matrix.build}}

    - name: CMake Build
      # Build your program with the given configuration
      working-directory: ${{github.workspace}}/build
      run: cmake --build '.' --config ${{matrix.build}}

    - name: CTest Tests
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      working-directory: ${{github.workspace}}
      run: ctest -C ${{matrix.build}}

    - name: CPack Install
      # Build your program with the given configuration
      working-directory: ${{github.workspace}}/build
      run: cpack --config CPackSourceConfig.cmake
      
    - name: CPack Zip
      working-directory: ${{github.workspace}}/build
      run: cpack -G ZIP -C CPackSourceConfig.cmake

    - name: CPack Tar
      working-directory: ${{github.workspace}}/build
      run: cpack -G TGZ -C CPackSourceConfig.cmake
      
#    - name: CPack Zip
#      working-directory: ${{github.workspace}}/build
#      run: cpack -G ZIP -C ${{matrix.build}}

#    - name: CPack Tar
#      working-directory: ${{github.workspace}}/build
#      run: cpack -G TGZ -C ${{matrix.build}}
